{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaTrack app tags\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://RecipeBook.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users operations."
    },
    {
      "name": "Recipes",
      "description": "Operations about recipe."
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login User",
        "operationId": "loginUser",
        "description": "Log in a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mypassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "mypassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": ["Users"],
        "summary": "Refresh token",
        "operationId": "refreshToken",
        "description": "Refresh token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-2"
          },
          "401": {
            "$ref": "#/components/responses/401-2"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/401-3"
          }
        }
      }
    },
    "/users/info": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user info",
        "operationId": "getUserInfo",
        "description": "User's info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-3"
          },
          "401": {
            "$ref": "#/components/responses/401-4"
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Patch user",
        "operationId": "patchUser",
        "description": "Patch a user with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@email.com"
                  },
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "about": {
                    "description": "about user",
                    "type": "string",
                    "example": "Hi, my name is John Doe, and I live in New York."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-4"
          },
          "400": {
            "$ref": "#/components/responses/400-2"
          },
          "401": {
            "$ref": "#/components/responses/401-5"
          }
        }
      }
    },
    "/users/count": {
      "get": {
        "tags": ["Users"],
        "summary": "Get count Users",
        "operationId": "countUsers",
        "description": "Retrieve the count of users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-5"
          },
          "400": {
            "$ref": "#/components/responses/400-3"
          }
        }
      }
    },
    "/users/photo": {
      "patch": {
        "tags": ["Users"],
        "summary": "User Avatar",
        "operationId": "userAvatar",
        "description": "Upload or update user avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data:": {
              "schema": {
                "type": "object",
                "required": ["avatar"],
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200-6"
          },
          "400": {
            "$ref": "#/components/responses/400-4"
          },
          "401": {
            "$ref": "#/components/responses/401-6"
          }
        }
      }
    },
    "/recipes": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Create a new recipe",
        "operationId": "createRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "ingredients": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "steps": { "type": "string" }
                },
                "required": ["name", "ingredients", "steps"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get recipe by id",
        "operationId": "getRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6693b609d6192024db757e57"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "ingredients": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "steps": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": ["Recipes"],
        "summary": "Delete recipe",
        "operationId": "deleteRecipe",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6693b609d6192024db757e57"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "ingredients": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "steps": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "name",
          "About",
          "photo"
        ],
        "properties": {
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "user@email.com"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe"
          },
          "about": {
            "description": "about user",
            "type": "string",
            "example": "Hi, my name is John Doe, and I live in New York."
          },
          "photo": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successfully register!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "6IkpXVCJ9.eyJpZCI"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "Successfully register",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "user@mail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Fail register",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password is not allowed to be empty"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Fail login",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized error"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Fail register",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-2": {
        "description": "Successfully fefresh",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "6IkpXVCJ9.eyJpZCI"
                }
              }
            }
          }
        }
      },
      "401-2": {
        "description": "Fail refresh",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized error"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid refresh token"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-3": {
        "description": "Fail logout",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized error"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-3": {
        "description": "Successfully update",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/user"
            }
          }
        }
      },
      "401-4": {
        "description": "Fail get info",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-4": {
        "description": "Successfully update",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "400-2": {
        "description": "Fail update user info",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "At least one field must be filled"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-5": {
        "description": "Fail update",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-5": {
        "description": "Successfully get count",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "string",
                  "example": "5"
                }
              }
            }
          }
        }
      },
      "400-3": {
        "description": "Fail count users",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Fail get count"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200-6": {
        "description": "Successfully upload Avatar",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "photo": {
                  "type": "string",
                  "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                }
              }
            }
          }
        }
      },
      "400-4": {
        "description": "Fail upload avatar",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "File not provided"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401-6": {
        "description": "Failed upload avatar",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}